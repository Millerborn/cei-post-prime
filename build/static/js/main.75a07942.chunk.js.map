{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/cardReducer.js","redux/reducers/annualReleaseReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/cardSaga.js","redux/sagas/passwordSaga.js","redux/sagas/annualReleaseSaga.js","redux/sagas/index.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Admin/AnnualReleaseExtension/Form.js","components/Admin/AnnualReleaseExtension/AnnualReleaseExtension.js","components/Admin/CardExtension/AddCard.js","components/Admin/CardExtension/EditCard.js","components/Admin/CardExtension/CardItems.js","components/Admin/CardExtension/CardExtension.js","components/Admin/CsvExtension/ViewLatestCsv.js","components/Admin/CsvExtension/CsvConversion.js","components/Admin/CsvExtension/CsvExtension.js","components/Admin/EditPasswordExtension/EditPasswordExtension.js","components/Admin/ExtensionPanels/ExtensionPanels.js","components/LogOutButton/LogOutButton.js","components/Admin/AdminHome.js","components/IndicatorPage/GraphIndicator.js","components/IndicatorPage/TextIndicator.js","components/IndicatorPage/TitleIndicator.js","components/IndicatorPage/IndicatorPage.js","components/AnnualRelease/AnnualRelease.js","components/Footer/Footer.js","components/Nav/DrawerToggleButton.js","components/Nav/Nav.js","components/Nav/SideDrawer.js","components/Nav/Backdrop.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","cardReducer","releaseReducer","rootReducer","errors","user","cards","annualRelease","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","getCards","addCard","deleteCard","editCard","cardSaga","cardSaga_marked","call","alert","cardSaga_marked2","delete","concat","cardSaga_marked3","cardId","_context4","_id","_marked4","_context5","takeEvery","_marked5","editPassword","passwordSaga","passwordSaga_marked","passwordSaga_marked2","getRelease","addRelease","releaseSaga","annualReleaseSaga_marked","annualReleaseSaga_marked2","annualReleaseSaga_marked3","rootSaga","all","sagas_marked","LoginPage","username","password","login","event","preventDefault","_this","props","dispatch","handleInputChangeFor","propertyName","setState","Object","defineProperty","target","value","_this2","react_default","createElement","className","role","onSubmit","htmlFor","name","onChange","onClick","Component","connect","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","Form","newRelease","year","graph","header","description","handleChange","objectSpread","handleOpen","open","handleClose","classes","div","id","form","FormControl_default","TextField_default","label","margin","variant","Select_default","placeholder","onClose","onOpen","input","OutlinedInput_default","labelWidth","MenuItem_default","multiline","rowsMax","Button_default","color","compose","reduxState","withStyles","theme","display","flexWrap","maxHeight","maxWidth","width","height","backgroundColor","AnnualReleaseExtension","AnnualReleaseExtension_Form","AddCard","newCard","title","image","url","category_id","EditCard","card","CardItems","rand","Math","round","random","getModalStyle","top","left","transform","map","index","key","Card_default","CardMedia_default","alt","img","src","CardContent_default","href","rel","Modal_default","aria-labelledby","aria-describedby","style","paper","CardExtension_EditCard","position","spacing","unit","palette","background","boxShadow","shadows","padding","CardExtension","CardExtension_AddCard","CardExtension_CardItems","ViewLatestCsv","CsvConversion","JSON","stringify","addCsv","accept","CsvExtension","CsvExtension_CsvConversion","CsvExtension_ViewLatestCsv","PasswordExtension","ExtensionPanels","root","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","heading","ExpansionPanelDetails_default","Admin_CsvExtension_CsvExtension","Admin_AnnualReleaseExtension_AnnualReleaseExtension","Admin_CardExtension_CardExtension","EditPasswordExtension","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","fontFamily","AdminHome","h1","components_LogOutButton_LogOutButton","extensionPanels","Admin_ExtensionPanels_ExtensionPanels","labels","datasets","fill","animation","duration","easing","GraphIndicator","react_chartjs_2_es","options","maintainAspectRatio","button","size","race","location","marginTop","marginBottom","marginRight","borderRadius","marginLeft","TextField","index_es","indicatorTitle","indicatorText","textTransform","letterSpacing","lineHeight","textAlign","TitleIndicator","media","flexGrow","overflow","IndicatorPage","Grid_default","container","item","xs","IndicatorPage_TitleIndicator","IndicatorPage_GraphIndicator","text","TextIndicator","AnnualRelease","paddingTop","link","textDecoration","&:hover","gutterBottom","Link","to","drawerToggleButton","click","Nav_DrawerToggleButton","drawerClickHandler","sideDrawer","drawerClasses","show","backdrop","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","Nav_Backdrop","HashRouter","components_Nav_Nav","Nav_SideDrawer","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.75a07942.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const cardReducer = (state=[], action) => {\n    switch (action.type) {\n      case 'SET_CARDS':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // cards will be on the redux state at:\n  // props.cards\n  export default cardReducer;\n  ","const releaseReducer = (state=[], action) => {\n    switch (action.type) {\n      case 'SET_RELEASE':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // Annual Releases will be on the redux state at:\n  // props.annualRelease\n  export default releaseReducer;\n  ","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport cards from './cardReducer';\nimport annualRelease from './annualReleaseReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  cards,\n  annualRelease,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, call, takeEvery } from 'redux-saga/effects';\n\nfunction* getCards() {\n    try {\n      const response = yield axios.get('/cards');\n      console.log('get cardSaga response', response.data);\n      yield put({ type: 'SET_CARDS', payload: response.data });      \n    } catch (error) {\n      console.log('Card get request failed', error);\n    }\n}\n\nfunction* addCard(action) {\n    console.log('Add Card saga', action);\n    try {\n      yield call( axios.post, '/cards', action.payload );\n      alert('Success adding Card!');\n      yield put( { type: 'GET_CARDS' } );\n    }\n    catch(error) {\n      console.log('error adding Card', error);\n      alert('Error adding Card');\n    }\n  }\n// ----------------------------------- //\n// Mongo DELETE\nfunction* deleteCard(action) {\nconsole.log('Delete saga to remove Card: ', action.payload);\ntry {\n    // axios asynch call to remove Card from server\n    yield call(axios.delete, `/cards/${action.payload}`);\n    // alert('Deleted Card');\n    yield put( { type: 'GET_CARDS' } );\n}\n    catch (error) {\n        console.log('error with delete request to /cards');\n        alert('Error Deleting Card');\n    }\n}\n  \nfunction* editCard(action) {\nconsole.log('Edit Card saga', action.payload);\nconst cardId = action.payload._id\ntry {\n    // axios asynch call to add card to server\n    yield call(axios.put, `/cards/${cardId}`, action.payload);\n    yield put( { type: 'GET_CARDS' } );\n}\n    catch (error) {\n        console.log('error with Card PUT request', error);\n    }\n}\n\nfunction* cardSaga() {\n  yield takeEvery('GET_CARDS', getCards);\n  yield takeEvery('ADD_CARD', addCard);\n  yield takeEvery('DELETE_CARD', deleteCard);\n  yield takeEvery('EDIT_CARD', editCard);\n}\n\nexport default cardSaga;","import axios from 'axios';\nimport { call, takeEvery } from 'redux-saga/effects';\n  \nfunction* editPassword(action) {\nconsole.log('Edit password saga', action.payload);\ntry {\n    yield call(axios.put, '/password', action.payload);\n    alert('Successfully Changed Password')\n}\n    catch (error) {\n        console.log('error with Password PUT request', error);\n        alert('Error Changing Password')\n    }\n}\n\nfunction* passwordSaga() {\n  yield takeEvery('EDIT_PASSWORD', editPassword);\n}\n\nexport default passwordSaga;","import axios from 'axios';\nimport { put, call, takeEvery } from 'redux-saga/effects';\n\nfunction* getRelease() {\n    try {\n      const response = yield axios.get('/annual-release');\n      console.log('get annual release response', response.data);\n      yield put({ type: 'SET_RELEASE', payload: response.data });      \n    } catch (error) {\n      console.log('Release get request failed', error);\n    }\n}\n\nfunction* addRelease(action) {\n    console.log('Add Release saga', action);\n    try {\n      yield call( axios.post, '/annual-release', action.payload );\n      alert('Success adding Release!');\n      yield put( { type: 'GET_RELEASE' } );\n    }\n    catch(error) {\n      console.log('Error adding Release', error);\n      alert('Error adding Release');\n    }\n  }\n// ----------------------------------- //\n// Mongo DELETE\n// function* deleteCard(action) {\n// console.log('Delete saga to remove Card: ', action.payload);\n// try {\n//     // axios asynch call to remove Card from server\n//     yield call(axios.delete, '/cards', {params: {id: action.payload}});\n//     alert('Deleted Card');\n//     yield put( { type: 'GET_CARDS' } );\n// }\n//     catch (error) {\n//         console.log('error with delete request to /cards');\n//         alert('Error Deleting Card');\n//     }\n// }\n\n//---------------------------------------//\n// SQL DELETE\n// function* deleteRelease(action) {\n//     console.log('Delete Release', action);\n//     try {\n//         yield call( axios.delete, `/annual-release/${action.payload}`);\n//         alert('Successfully Deleted Release');\n//         yield put( { type: 'GET_RELEASE' } );\n//     }\n//     catch(error) {\n//         console.log('error with delete request', error);\n//             alert('Error Deleting Release');\n//     }\n// }\n  \n// function* editRelease(action) {\n// console.log('Edit Release saga', action.payload);\n// try {\n//     // axios asynch call to add koala to server\n//     yield call(axios.put, '/annual-release', action.payload);\n//     yield put( { type: 'GET_RELEASE' } );\n// }\n//     catch (error) {\n//         console.log('Error with Release PUT request', error);\n//     }\n// }\n\nfunction* releaseSaga() {\n  yield takeEvery('GET_RELEASE', getRelease);\n  yield takeEvery('ADD_RELEASE', addRelease);\n//   yield takeEvery('DELETE_RELEASE', deleteRelease);\n//   yield takeEvery('EDIT_RELEASE', editRelease);\n}\n\nexport default releaseSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport cardSaga from './cardSaga';\nimport passwordSaga from './passwordSaga';\nimport releaseSaga from './annualReleaseSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    cardSaga(),\n    passwordSaga(),\n    releaseSaga(),\n  ]);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user._id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n    div: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    form: {\n        display: 'inline-block',\n        maxHeight: '400px',\n        maxWidth: '600px',\n        width: 'auto',\n        height: 'auto',\n        backgroundColor: 'white',\n    },\n  });\n\nclass Form extends Component {\n\n    state = {\n        newRelease: {\n            year: '',\n            graph: '',\n            header: '',\n            description: '',\n        }\n    }\n\n    // handle changes in the form inputs\n    handleChange = event => {\n        console.log('handleChange', event.target.value)\n        this.setState({\n            newRelease: {\n                ...this.state.newRelease,\n                [event.target.name]: event.target.value,\n            }\n        });\n    }\n\n    // submit Release information from form\n    onSubmit = event => {\n        console.log('Form adding: ', this.state);\n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_RELEASE', payload: this.state.newRelease })\n        this.setState({\n            newRelease: {\n                year: '',\n                graph: '',\n                header: '',\n                description: '',\n            }\n        });\n    }\n\n    // handle open of drop down menu\n    handleOpen = () => {\n        this.setState({ open: true });\n      };\n    \n    // handle close of drop down menu\n    handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const newRelease = this.state.newRelease;\n    return (\n        <div className={classes.div} id=\"form\">\n                <form className={classes.form} id=\"formInputs\" onSubmit={this.onSubmit}>\n                    <FormControl id=\"formMenu\">\n                    <TextField id=\"year\" type='number' label=\"year\" name=\"year\" margin=\"normal\" variant=\"outlined\"\n                        value={newRelease.year} onChange={this.handleChange} />\n                        <Select\n                            variant=\"outlined\"\n                            label=\"Graph\"\n                            placeholder=\"None\"\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                            onOpen={this.handleOpen}\n                            value={newRelease.graph}\n                            onChange={this.handleChange}\n                            name=\"graph\"\n                            input={\n                                <OutlinedInput\n                                  labelWidth={0}\n                                  name=\"graph\"\n                                  id=\"graph-select\"\n                                  label=\"graph\"\n                                  placeholder=\"graph\"\n                                />\n                              }\n                        >\n                               <MenuItem value=''>\n                               <em>None</em>\n                               </MenuItem>\n                                <MenuItem value={1}>Wages</MenuItem> \n                                <MenuItem value={2}>Employment</MenuItem> \n                                <MenuItem value={3}>Entrepreneurship</MenuItem> \n                                <MenuItem value={4}>Business Growth</MenuItem> \n                                <MenuItem value={5}>Access to Capital</MenuItem> \n                                <MenuItem value={6}>Regional Investment</MenuItem>\n                                <MenuItem value={7}>Job Quality</MenuItem> \n                                <MenuItem value={8}>Workforce Development</MenuItem> \n                                <MenuItem value={9}>Two-year College Graduation + Transfer Rates</MenuItem> \n                                <MenuItem value={10}>Four-year College Graduation + Transfer Rates</MenuItem> \n                                <MenuItem value={11}>Transit</MenuItem> \n                                <MenuItem value={12}>Home Ownership</MenuItem> \n                                <MenuItem value={13}>Lending</MenuItem>  \n                                <MenuItem value={14}>Renting</MenuItem>  \n                            </Select>\n                    <TextField id=\"graph_header\" type='text' label=\"header\" name=\"header\" margin=\"normal\" variant=\"outlined\"\n                        value={newRelease.header} onChange={this.handleChange} />\n                    <TextField \n                        id=\"graph_description\" \n                        multiline\n                        rowsMax=\"40\"\n                        className={classes.description} \n                        type='url' label=\"description\" \n                        name=\"description\" \n                        margin=\"normal\" \n                        variant=\"outlined\"\n                        value={newRelease.description} \n                        onChange={this.handleChange} \n                    />\n                    </FormControl>\n                    <br></br>\n                    <br></br>\n                    <Button type='submit' variant=\"outlined\" color=\"primary\">\n                        Add Release\n                    </Button>\n                </form>\n        </div>\n    );\n  }\n}\n\nForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  reduxState\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(Form);","import React, { Component } from 'react';\nimport Form from './Form';\n\nclass AnnualReleaseExtension extends Component {\n\n    \n\n    render() {\n        return (\n            <div>\n                <Form />\n            </div>\n        );\n    }\n}\n\nexport default AnnualReleaseExtension;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n    div: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    form: {\n        display: 'inline-block',\n        maxHeight: '400px',\n        maxWidth: '600px',\n        width: 'auto',\n        height: 'auto',\n        backgroundColor: 'white',\n    },\n});\n\nclass AddCard extends Component {\n\nstate = {\n    newCard: {\n        title: '',\n        image: '',\n        url: '',\n        category_id: '',\n    }\n}\n\n// handle changes in the form inputs\nhandleChange = event => {\n    console.log('handleChange', event.target.value)\n    this.setState({\n        newCard: {\n            ...this.state.newCard,\n            [event.target.name]: event.target.value,\n        }\n    });\n}\n\n// submit project information from form\nonSubmit = event => {\n    console.log('Form adding: ', this.state);\n    event.preventDefault();\n    this.props.handleClose();\n    this.props.dispatch({ type: 'ADD_CARD', payload: this.state.newCard })\n    this.setState({\n        newCard: {\n            title: '',\n            image: '',\n            url: '',\n            category_id: '',\n        }\n    });\n}\n\n  render() {\n    const { classes } = this.props;\n    const newCard = this.state.newCard;\n    return (\n        <div className={classes.div} id=\"form\">\n            <form className={classes.form} id=\"formInputs\" onSubmit={this.onSubmit}>\n                <FormControl id=\"formMenu\">\n                <TextField \n                    id=\"card-title\" \n                    type='text' \n                    label=\"title\" \n                    name=\"title\" \n                    margin=\"normal\" \n                    variant=\"outlined\"\n                    value={newCard.title} \n                    onChange={this.handleChange} \n                />\n                <TextField \n                    id=\"card-image\" \n                    type='text' \n                    label=\"image\" \n                    name=\"image\" \n                    margin=\"normal\" \n                    variant=\"outlined\"\n                    value={newCard.image} \n                    onChange={this.handleChange} \n                />\n                <TextField \n                    id=\"card-url\" \n                    className={classes.description} \n                    type='url' label=\"url\" \n                    name=\"url\" \n                    margin=\"normal\" \n                    variant=\"outlined\"\n                    value={newCard.url} \n                    onChange={this.handleChange} \n                />\n                <Select\n                    variant=\"outlined\"\n                    label=\"Category\"\n                    placeholder=\"None\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    onOpen={this.handleOpen}\n                    value={newCard.category_id}\n                    onChange={this.handleChange}\n                    name=\"category_id\"\n                    input={\n                        <OutlinedInput\n                            labelWidth={0}\n                            name=\"category_id\"\n                            id=\"category-select\"\n                            label=\"category\"\n                            placeholder=\"category\"\n                        />\n                    }\n                >\n                    <MenuItem value=''>\n                    <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1}>Macro View</MenuItem> \n                    <MenuItem value={2}>Economic Development</MenuItem> \n                    <MenuItem value={3}>Human Capital</MenuItem>\n                    <MenuItem value={4}>Access and Transit</MenuItem>\n                </Select>\n                </FormControl>\n                <br></br>\n                <br></br>\n                <Button type='submit' variant=\"outlined\" color=\"primary\">\n                    Add Release\n                </Button>\n            </form>\n        </div>\n    );\n  }\n}\n\nAddCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  reduxState\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(AddCard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n    div: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    form: {\n        display: 'inline-block',\n        maxHeight: '400px',\n        maxWidth: '600px',\n        width: 'auto',\n        height: 'auto',\n        backgroundColor: 'white',\n    },\n});\n\nclass EditCard extends Component {\n\nstate = {\n    newCard: {\n        _id: this.props.cardId,\n        title: this.props.card.title,\n        image: this.props.card.image,\n        url: this.props.card.url,\n        category_id: this.props.card.category_id,\n    }\n}\n\n// handle changes in the form inputs\nhandleChange = event => {\n    console.log('handleChange', event.target.value)\n    this.setState({\n        newCard: {\n            ...this.state.newCard,\n            [event.target.name]: event.target.value,\n        }\n    });\n}\n\n// submit project information from form\nonSubmit = event => {\n    console.log('Form adding: ', this.state);\n    event.preventDefault();\n    this.props.handleClose();\n    this.props.dispatch({ type: 'EDIT_CARD', payload: this.state.newCard })\n    this.setState({\n        newCard: {\n            _id: '',\n            title: '',\n            image: '',\n            url: '',\n            category_id: '',\n        }\n    });\n}\n\n  render() {\n    const { classes } = this.props;\n    const newCard = this.state.newCard;\n    return (\n        <div className={classes.div} id=\"form\">\n            <form className={classes.form} id=\"formInputs\" onSubmit={this.onSubmit}>\n                <FormControl id=\"formMenu\">\n                <TextField \n                    id=\"card-title\" \n                    type='text' \n                    label=\"title\" \n                    name=\"title\" \n                    margin=\"normal\" \n                    variant=\"outlined\"\n                    value={newCard.title} \n                    onChange={this.handleChange} \n                />\n                <TextField \n                    id=\"card-image\" \n                    type='text' \n                    label=\"image\" \n                    name=\"image\" \n                    margin=\"normal\" \n                    variant=\"outlined\"\n                    value={newCard.image} \n                    onChange={this.handleChange} \n                />\n                <TextField \n                    id=\"card-url\" \n                    className={classes.description} \n                    type='url' label=\"url\" \n                    name=\"url\" \n                    margin=\"normal\" \n                    variant=\"outlined\"\n                    value={newCard.url} \n                    onChange={this.handleChange} \n                />\n                <Select\n                    variant=\"outlined\"\n                    label=\"Category\"\n                    placeholder=\"None\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    onOpen={this.handleOpen}\n                    value={newCard.category_id}\n                    onChange={this.handleChange}\n                    name=\"category_id\"\n                    input={\n                        <OutlinedInput\n                            labelWidth={0}\n                            name=\"category_id\"\n                            id=\"category-select\"\n                            label=\"category\"\n                            placeholder=\"category\"\n                        />\n                    }\n                >\n                    <MenuItem value=''>\n                    <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1}>Macro View</MenuItem> \n                    <MenuItem value={2}>Economic Development</MenuItem> \n                    <MenuItem value={3}>Human Capital</MenuItem>\n                    <MenuItem value={4}>Access and Transit</MenuItem>\n                </Select>\n                </FormControl>\n                <br></br>\n                <br></br>\n                <Button type='submit' variant=\"outlined\" color=\"primary\">\n                    Edit Card\n                </Button>\n            </form>\n        </div>\n    );\n  }\n}\n\nEditCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  cards: reduxState.cards,\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(EditCard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport EditCard from './EditCard'\n\nconst styles = theme => ({\n    img: {\n        height: 'auto',\n        width: 'auto',\n        maxHeight: '150px',\n        maxWidth: '200px',\n    },\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n  });\nclass CardItems extends Component {\n\n    deleteCard = (id) => {\n        console.log('Delete Card id: ', id);\n        this.props.dispatch( { type: 'DELETE_CARD', payload: id } );\n    }\n\n    state = {\n        open: false,\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n    \n      handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    rand = () => {\n        return Math.round(Math.random() * 20) - 10;\n    }\n\n    getModalStyle = () => {\n        const top = 50 + this.rand();\n        const left = 50 + this.rand();\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className=\"projects-div\">\n                {this.props.cards.map( (card, index) => {\n                    return (\n                    <div key={index}>\n                        <Card className=\"project-content\" id=\"display\">\n                            <CardMedia>\n                                <img \n                                    id=\"img\" \n                                    alt=\"card-action\" \n                                    className={classes.img} \n                                    src={card.image}\n                                />\n                            </CardMedia>\n                            <CardContent>\n                                <h2>{card.title}</h2>\n                            </CardContent>\n                            <CardContent>\n                                <Button \n                                    color=\"primary\" \n                                    variant=\"contained\">\n                                    <a \n                                        className=\"project-link-button\" \n                                        href={card.url} \n                                        target=\"_blank\" \n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        Read More\n                                    </a>\n                                </Button>\n                            </CardContent>\n                            <CardContent>\n                                <div>Showing on Page {card.name}</div>\n                            </CardContent>\n                        </Card>\n                        <Button onClick={this.handleOpen}>Edit</Button>\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={this.state.open}\n                            onClose={this.handleClose}\n                        >\n                        <div style={this.getModalStyle()} className={classes.paper}>\n                            <h2 id=\"add_card_popup\">Edit Card</h2>\n                            <EditCard card={card} cardId={card._id} handleClose={this.handleClose} />\n                        </div>\n                        </Modal>                        \n                        <Button onClick={() => this.deleteCard(card._id)}>Delete</Button>\n                    </div>\n                )\n            })}\n        </div>\n    );\n  }\n}\n\nCardItems.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  cards: reduxState.cards,\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(CardItems);\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport AddCard from './AddCard';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardItems from './CardItems';\n\nconst styles = theme => ({\n    paper: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n    },\n  });\n\nclass CardExtension extends Component {\n\n    state = {\n        open: false,\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n    \n      handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    rand = () => {\n        return Math.round(Math.random() * 20) - 10;\n    }\n\n    getModalStyle = () => {\n    const top = 50 + this.rand();\n    const left = 50 + this.rand();\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n\n    // handle open of drop down menu\n    handleOpen = () => {\n        this.setState({\n            open: true\n        });\n    };\n    \n    // handle close of drop down menu\n    handleClose = () => {\n        this.setState({\n            open: false \n        });  \n    };\n\n    // remove project\n    deleteCard = (id) => {\n        console.log('In delete card function', id);\n        this.props.dispatch( { type: 'DELETE_CARD', payload: id } );\n    }\n\n    // display cards on page load\n    componentDidMount() {\n        this.getCards();\n    }\n\n    // get cards\n    getCards() {\n        console.log('dispatching GET_CARDS');\n        this.props.dispatch( { type: 'GET_CARDS' } );\n    }\n\n    // edit card\n    editCard() {\n        this.props.dispatch( { type: 'EDIT_CARD' } );\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Button onClick={this.handleOpen}>Add Card</Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                <div style={this.getModalStyle()} className={classes.paper}>\n                    <h2 id=\"add_card_popup\">Add A Card</h2>\n                    <AddCard handleClose={this.handleClose} />\n                </div>\n                </Modal>\n                <br></br>\n                <CardItems />\n            </div>\n        );\n    }\n}\n\nCardExtension.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  reduxState\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(CardExtension);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass ViewLatestCsv extends Component {\n    render() {\n        return (\n            <div>\n                <p>Latest CSV</p>\n                <Button>Delete CSV</Button>\n            </div>\n        );\n    }\n}\n\nexport default ViewLatestCsv;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass CsvConversion extends Component {\n\n    render() {\n        return (\n            <div>\n                {JSON.stringify('hi')}\n                <Button id=\"submitCsv\">\n                <input \n                    id=\"myFile\" \n                    type=\"file\" \n                    onChange={this.addCsv}\n                    accept=\".csv\" \n                />\n                </Button>\n                <br></br>\n            </div>\n        );\n    }\n}\n\nexport default CsvConversion;\n","import React, { Component } from 'react';\nimport ViewLatestCsv from './ViewLatestCsv';\nimport CsvConversion from './CsvConversion';\n\nclass CsvExtension extends Component {\n\n    addCsv = ()=> {\n        console.log('add csv');\n    }\n\n    render() {\n        return (\n            <div>\n                <CsvConversion />\n                <br></br>\n                <ViewLatestCsv />\n            </div>\n        );\n    }\n}\n\nexport default CsvExtension;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    div: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    form: {\n        display: 'inline-block',\n        maxHeight: '400px',\n        maxWidth: '600px',\n        width: 'auto',\n        height: 'auto',\n        backgroundColor: 'white',\n    },\n});\n\nclass PasswordExtension extends Component {\n\nstate = {\n    username: this.props.user.username,\n    password: '',\n}\n\n// handle changes in the form inputs\nhandleChange = event => {\n    console.log('handleChange', event.target.value)\n    this.setState({\n        ...this.state,\n        [event.target.name]: event.target.value,\n    });\n}\n\n// submit project information from form\nonSubmit = event => {\n    console.log('Changing Password to: ', this.state);\n    event.preventDefault();\n    // this.props.dispatch({ type: 'EDIT_PASSWORD', payload: this.state })\n    this.setState({\n        username: this.props.user.username,\n        password: '',\n    });\n}\n\n  render() {\n    const { classes } = this.props;\n    return (\n        <div className={classes.div} id=\"form\">\n            <form className={classes.form} id=\"formInputs\" onSubmit={this.onSubmit}>\n                <FormControl id=\"formMenu\">\n                    <TextField \n                        id=\"edit_password\" \n                        type='text' \n                        label=\"change password\" \n                        name=\"password\" \n                        margin=\"normal\" \n                        variant=\"outlined\"\n                        value={this.state.password} \n                        onChange={this.handleChange} \n                    />\n                </FormControl>\n                <br></br>\n                <br></br>\n                <Button type='submit' variant=\"outlined\" color=\"primary\">\n                    Save Password\n                </Button>\n            </form>\n        </div>\n    );\n  }\n}\n\nPasswordExtension.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  user: reduxState.user,\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(PasswordExtension);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport AnnualReleaseExtension from '../AnnualReleaseExtension/AnnualReleaseExtension';\nimport CardExtension from '../CardExtension/CardExtension';\nimport CsvExtension from '../CsvExtension/CsvExtension';\nimport EditPasswordExtension from '../EditPasswordExtension/EditPasswordExtension';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(30),\n    fontWeight: theme.typography.fontWeightRegular,\n    fontFamily: 'oswald',\n    padding: '5px',\n    margin: '5px',\n  },\n});\n\n\nclass ExtensionPanels extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>CSV File Upload/Delete</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <CsvExtension />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>Create New Annual Release</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <AnnualReleaseExtension />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>What You Can Do</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <CardExtension />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.heading}>Change Password</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <EditPasswordExtension />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n        );\n    }\n}\n\nExtensionPanels.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapReduxStateToProps = reduxState => ({\n  reduxState\n});\n\nexport default compose(\n    connect(mapReduxStateToProps),\n    withStyles(styles)\n)(ExtensionPanels);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExtensionPanels from './ExtensionPanels/ExtensionPanels';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n\nconst styles = theme => ({\n  extensionPanels: {\n    margin: '5px',\n  },\n});\n\nclass AdminHome extends Component {\n  render() {\n      const { classes } = this.props;   \n      return (\n        <div>\n          <h1 className={classes.h1} id=\"welcome\">\n            Welcome, { this.props.user.username }\n          </h1>\n          <LogOutButton />\n          <div className={classes.extensionPanels}>\n            <ExtensionPanels />\n          </div>\n        </div>\n      );\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n\nAdminHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(AdminHome);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Line } from 'react-chartjs-2';\n\nconst styles = theme => ({\n  root: {\n   margin: theme.spacing.unit,\n  },\n  button: {\n    marginTop: '3%',\n    marginBottom: '3%'\n  },\n  race: {\n    marginRight: theme.spacing.unit,\n    borderRadius: 20,\n  },\n  location: {\n    marginLeft: theme.spacing.unit,\n    borderRadius: 20\n  } \n});\n\nlet newData = [40,50,60,60,80,90];\n\nconst data = {\n  labels: ['2014', '2015', '2016', '2017', '2018'],\n  datasets: [{\n      data: newData,\n      fill: false,\n    }],\n    animation: {\n        duration: 1000,\n        easing: 'linear'\n    }\n};\n\nclass GraphIndicator extends Component {\n  render() {\n    const { classes } = this.props;\n      return (\n        <div className={classes.root}>\n          <Line\n            data={data}\n              options={{\n              title: false,\n              maintainAspectRatio: false\n        }}/>\n          <div className={classes.button}>\n            <Button variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.race}>Race</Button>\n            <Button variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.location}>Location</Button>\n          </div>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nGraphIndicator.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(GraphIndicator));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing.unit,\n  },\n  indicatorTitle: {\n    fontSize: '30px',\n    fontWeight: 500,\n    color: '#4c2a74',\n    textTransform: 'uppercase',\n    letterSpacing: '1.53px',\n    lineHeight: '1em',\n    fontFamily: 'Lato',\n    marginBottom: 20\n  },\n  indicatorText: {\n    fontSize: '20px',\n    display: 'block',\n    margin: '3%',\n    textAlign: 'justify'\n  }\n});\n\nclass TextField extends Component {\n  render() {\n    const { classes } = this.props;\n      return (\n        <div className={classes.root}>\n          <Typography className={classes.indicatorTitle}>Wages</Typography>\n            <Typography className={classes.indicatorText}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Feugiat scelerisque varius morbi enim nunc faucibus a. Tincidunt augue interdum velit euismod. Tellus at urna condimentum mattis pellentesque. Habitasse platea dictumst vestibulum rhoncus est pellentesque elit ullamcorper dignissim. Adipiscing vitae proin sagittis nisl rhoncus mattis rhoncus. Enim ut tellus elementum sagittis vitae et leo duis. Libero justo laoreet sit amet cursus. Vitae nunc sed velit dignissim sodales ut eu sem. Ut consequat semper viverra nam libero justo laoreet sit amet.\n            </Typography>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nTextField.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(TextField));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport { Typography, CardMedia } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\n\nconst styles = theme => ({\n    root: {\n      flexGrow: 1,\n      textAlign: 'center',\n    },\n    title: {\n      textAlign: 'center',\n      padding: 'auto',\n      fontSize: '45px',\n      fontWeight: 700,\n      color: 'white',\n      textTransform: 'uppercase',\n      letterSpacing: '1.53px',\n      lineHeight: '1em',\n      fontFamily: 'Lato',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    card: {\n      height: 500,\n      position: 'relative',\n      marginBottom: '5%',\n    },\n    media: {\n      height: '100%',\n      overflow: 'hidden'\n    },\n  });\n\nclass TitleIndicator extends Component {\n  render() {\n    const { classes } = this.props;\n      return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n                <CardMedia\n                    className={classes.media}\n                    image=\"images/twincitiesblue.jpg\"\n                    title=\"title-background\">\n                    <Typography className={classes.title}>Macro Indicators</Typography>\n                </CardMedia>\n            </Card>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nTitleIndicator.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(TitleIndicator));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport propTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport 'typeface-lato';\nimport Grid from '@material-ui/core/Grid';\nimport 'react-chartjs-2';\n\nimport GraphIndicator from './GraphIndicator';\nimport TextIndicator from './TextIndicator';\nimport TitleIndicator from './TitleIndicator';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  title: {\n  },\n  graph: {\n  },\n  text: {\n  },\n});\n\nclass IndicatorPage extends Component {\n  render() {\n    const { classes } = this.props;\n      return (\n        <div className={classes.root}>\n          <Grid container spacing={24}>\n\n            <Grid className={classes.title} item xs={12}>\n              <TitleIndicator />\n            </Grid>\n          \n            <Grid className={classes.graph} item xs={6}>\n              <GraphIndicator />\n            </Grid>\n\n            <Grid className={classes.text} item xs={6}>\n              <TextIndicator />\n            </Grid>\n\n          </Grid>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nIndicatorPage.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(IndicatorPage));","import React from 'react';\n\nconst AnnualRelease = () => (\n  <div>\n    <p>\n        AnnualRelease\n    </p>\n  </div>\n);\n\nexport default AnnualRelease;","import React from 'react';\nimport './Footer.css';\n\nimport 'typeface-lato';\nimport propTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Link } from 'react-router-dom';\n\nconst styles = {\n  card: {\n    maxWidth: 345,\n    margin: '20px',\n    display: 'inline-block',\n    width: '100%',\n  },\n  media: {\n    height: 200,\n  },\n  title: {\n    color: 'white',\n    textAlign: 'center',\n    paddingTop: 40,\n    fontSize: 30,\n    fontWeight: 700,\n    fontFamily: 'Lato',\n    lineHeight: '1em',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black'\n  },\n  button: {\n    borderRadius: 50,\n    fontSize: 15,\n    fontWeight: 500,\n    textTransform: 'lowercase',\n    marginTop: 45,\n    backgroundColor: 'white',\n    \"&:hover\": {\n      backgroundColor: \"white\"\n    }\n  }\n};\n\nconst Footer = (props) => {\n\n  const { classes } = props;\n\n  return (\n    <footer>\n      <div className=\"footer-title\">See the full impact</div>\n      <div className=\"cards\">\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image=\"images/macro.jpeg\"\n            title=\"macro\">\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n              Macro\n            </Typography>\n            <Button className={classes.button}>\n              <Link className={classes.link} to=\"/macro\">Read More</Link>\n            </Button>\n          </CardMedia>\n        </Card>\n\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image=\"images/economic-development.jpeg\"\n            title=\"economic-development\">\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n              Economic Development\n            </Typography>\n            <Button className={classes.button}>\n              <Link className={classes.link} to=\"/economic-development\">Read More</Link>\n            </Button>\n          </CardMedia>\n        </Card>\n\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image=\"images/human-capitol.jpeg\"\n            title=\"human-capitol\">\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n              Human Capital\n            </Typography>\n            <Button className={classes.button}>\n              <Link className={classes.link} to=\"/human-capitol\">Read More</Link>\n            </Button>\n          </CardMedia>\n        </Card>\n\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.media}\n            image=\"images/access-transit.jpeg\"\n            title=\"access-transit\">\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n              Access & Transit\n            </Typography>\n            <Button className={classes.button}>\n              <Link className={classes.link} to=\"/access-transit\">Read More</Link>\n            </Button>\n          </CardMedia>\n        </Card>\n      </div>\n\n      <div className=\"contact\">\n        <span className=\"phone\">(612) 351-8200</span> \n        <span className=\"email\">info@centerforeconomicinclusion.org</span>\n      </div>\n    </footer>\n  )\n};\n\nFooter.propTypes = {\n  classes: propTypes.object.isRequired,\n};\n\nexport default (withStyles(styles)(Footer));\n","import React from 'react';\n\nimport './DrawerToggleButton.css';\n\nconst drawerToggleButton = props => (\n    <button className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n    </button>\n);\n\nexport default drawerToggleButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Nav.css';\nimport 'typeface-lato';\nimport DrawerToggleButton from './DrawerToggleButton';\n\nconst Nav = (props) => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n      <div className=\"toolbar__toggle-button\">\n        <DrawerToggleButton click={props.drawerClickHandler} />\n      </div>\n        <Link to=\"/\"><img src={`/images/CEI_Logo.png`} className=\"toolbar-logo\" alt=\"CEI\"/></Link>\n        <div className=\"spacer\" />\n        <div className=\"toolbar_navigation-items\">\n          <ul>\n            <li><Link className=\"nav-link\" to=\"/\">Home</Link></li>\n            <li><Link className=\"nav-link\" to=\"/macro\">Macro Indicators</Link></li>\n            <li><Link className=\"nav-link\" to=\"/economic-development\">Economic Development</Link></li>\n            <li><Link className=\"nav-link\" to=\"/human-capital\">Human Capital</Link></li>\n            <li><Link className=\"nav-link\" id=\"nav-link-at\" to=\"/access-transit\">Access & Transit</Link></li>\n          </ul>\n        </div>\n    </nav>\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './SideDrawer.css';\n\nconst sideDrawer = props => {\n  \n  let drawerClasses = 'side-drawer';\n  if (props.show) {\n    drawerClasses = 'side-drawer open';\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <li><Link className=\"nav-link\" to=\"/\">Home</Link></li>\n        <li><Link className=\"nav-link\" to=\"/macro\">Macro Indicators</Link></li>\n        <li><Link className=\"nav-link\" to=\"/economic-development\">Economic Development</Link></li>\n        <li><Link className=\"nav-link\" to=\"/human-capital\">Human Capital</Link></li>\n        <li><Link className=\"nav-link\" id=\"nav-link-at\" to=\"/access-transit\">Access & Transit</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default sideDrawer;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click} />\n);\n\nexport default backdrop;","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\n//Protected Components\nimport AdminHome from '../Admin/AdminHome';\n\n//Non Protected Components\nimport IndicatorPage from '../IndicatorPage/IndicatorPage';\nimport AnnualRelease from '../AnnualRelease/AnnualRelease';\nimport Footer from '../Footer/Footer';\n\n//Nav Bar Components\nimport Nav from '../Nav/Nav';\nimport SideDrawer from '../Nav/SideDrawer';\nimport Backdrop from '../Nav/Backdrop';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render() {\n\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />\n    }\n\n    return (\n      <Router>\n        <div>\n        <div style={{height: '100%'}}>\n        <Nav drawerClickHandler={this.drawerToggleClickHandler} />\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n          </div>\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route\n              exact\n              path=\"/home\"\n              component={AnnualRelease}\n            />\n            <Route\n              exact\n              path=\"/macro\"\n              component={IndicatorPage}\n            />\n            <Route\n              exact\n              path=\"/economic-development\"\n              component={IndicatorPage}\n            />\n            <Route\n              exact\n              path=\"/human-capital\"\n              component={IndicatorPage}\n            />\n            <Route\n              exact\n              path=\"/access-transit\"\n              component={IndicatorPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin\"\n              component={AdminHome}\n            />\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}